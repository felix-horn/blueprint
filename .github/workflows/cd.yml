## CI: checks that everything is okay
## CD: deploys
name: 'Continuous delivery'
on:
  release:
    types: [published]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# Concurrency: Only one CD per group (we only have the group "pages") shall run at one moment.
concurrency:
  group: "pages"

# Todo:
# - no linting, type checking, etc. as this has already been done in CI; however,
# - some parts of CI are needed again, as we start with an empty ubuntu, e.g.
# - checkout
# - node setup
# - installing dependencies
# - building

jobs:
  # deploys.
  cd:
    name: 'Continuous Delivery'
    needs: ci
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Git checkout
      ## "actions" are pre-defined on GitHub
      ## checks out the current code
        uses: actions/checkout@v3

      ## node can be imagined like Chrome without Chrome, it understands JS, more specific: it's a server-side runtime built on top of V8 (JS engine from Chrome)
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          ## by default caching is turned off, we want to cache because otherwise every run of the pipeline would need to donwload all dependecies again
          ## at the beginning ubuntu is completely empty
          ## wir cashen die node_modules
          cache: 'npm'

      - name: Install dependencies
      ## npm ci (bild in in npm) would just use the versions from package-lock.json, if package-lock doesn't exist, it would fail by design
      ## npm install would undermine this logic: makes sure, sure to install all versions from package.json in case the package-lock has a different version
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup Pages
        uses: actions/configure-pages@v4

      # artifact = build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          # Upload everything webpack has built.
          path: 'dist'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
